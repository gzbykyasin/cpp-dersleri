C++ programlama dili ile yazmış olduğumuz kod ilk başta derleyici yardımıyla makine diline çevriliyor. Bu makine dili işletim sisteminde kullanılan mimariye göre belli farklılıklar gösterebilir. Mesela arm mimarisi ile çalışan işletim sistemi çekirdeğinin makine kodu farklı olabilir intel mimarisi ile çalışan işletim sistemi çekirdeği farklı olabilir. Tüm bu farklılıklar bizim derleyicimiz tarafından yorumlanarak işletim sistemine uygun makine koduna çevrilir. Makine kodundan kasdettiğimiz aslında 0 ve 1 lerden oluşan koddur. Fakat biz ona en yakın sembolik dil olan assembly den bahsediyor olacağız. Makine koduna çevrilen programımız işletim sistemine göre ( örneğin windows için .exe .dll dosyaları, linux için .out olabilir.) değişebilen uzantılara dönüştürülür. Dönüştürme sonucu yazdığımız kod uygulamaya çevrilmiş olur ve normalde herhangi bir uygulamayı çift tıklayarak açabileceğimiz kod kullandığımız ide yardımıyla programımızı hafızaya yükler ve otomatikman açılır hale getirir. Linux da terminal ekranından çalışan kişiler yardımcı ide kullanmıyorsa bu uygulamayı kendileri açacaktır(./a.out vb bir komut ile). Aslında basit olarak görünen bu işlem arka planında birsürü parçacığı çalıştırıyor ve bu da bize bilgisayarın ne kadar komplike bir yapısının olduğunu gösteriyor. Neticede programımız çalıştı ilk uygulama çalıştırma serüvenimiz böylelikle son bulmuş oldu.
